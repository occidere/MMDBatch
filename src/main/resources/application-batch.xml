<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    					http://www.springframework.org/schema/beans/spring-beans.xsd
    					http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context.xsd
    					http://www.springframework.org/schema/batch
    					http://www.springframework.org/schema/batch/spring-batch.xsd
    					http://www.springframework.org/schema/jdbc
    					http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task.xsd">

	<import resource="application-batch-context.xml" />

	<bean id="maruProcessor" class="org.occidere.mmdbatch.batch.job.MaruProcessor" />
	<bean id="maruReader" class="org.occidere.mmdbatch.batch.job.MaruReader">
		<property name="url" value="https://marumaru.in/"/>
	</bean>
	<bean id="maruWriter" class="org.occidere.mmdbatch.batch.job.MaruWriter"/>
	
	<batch:job id="mangaUpdateJob">
		<batch:step id="mangaUpdateStep">
			<batch:tasklet>
				<batch:chunk reader="maruReader"
					writer="mysqlItemWriter" processor="maruProcessor" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="maruUpdateScheduler" class="org.occidere.mmdbatch.scheduler.MaruUpdateScheduler">
		<property name="job" ref="mangaUpdateJob"/>
		<property name="jobLauncher" ref="jobLauncher"/>
	</bean>  
    <task:scheduled-tasks>
        <task:scheduled ref="maruUpdateScheduler" method="run" cron="* */30 * * * *"/>
    </task:scheduled-tasks>  
	
	<!-- ************************** -->
<!--
	<bean id="xmlItemReader"
		class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="tutorial" />
		<property name="resource"
			value="classpath:resources/tutorial.xml" />
		<property name="unmarshaller" ref="customUnMarshaller" />
	</bean>

	<bean id="customUnMarshaller"
		class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<util:map id="aliases">
				<entry key="tutorial" value="Tutorial" />
			</util:map>
		</property>
	</bean>
-->

	<bean id="mysqlItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value> 
            	<![CDATA[
            		INSERT INTO marumaru.mangaup (url, title, thumbnail, date, comment)
            		VALUES (:url, :title, :thumbnail, :date, :comment)
            		ON DUPLICATE KEY
            			UPDATE url=:url, title=:title, thumbnail=:thumbnail, date=:date, comment=:comment;
            	]]>
			</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	
</beans>     